{
  "openapi": "3.0.3",
  "info": {
    "title": "Initiative Management API",
    "version": "1.0.0",
    "description": "API for managing initiatives including adding and updating initiatives and projects."
  },
  "paths": {
    "/rpa/invoke-initiative": {
      "post": {
        "summary": "Invoke initiative action in Workday",
        "description": "Endpoint to send data to RPA to invoke the initiative action in Workday.",
        "requestBody": {
          "description": "JSON payload containing the initiative details to invoke in Workday.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiativeRequest"
              },
              "examples": {
                "InitiativeRequestExample": {
                  "summary": "Example payload for invoking initiative action",
                  "value": [
                    {
                      "action": "add",
                      "id": "Planview_RPA_Initiative_002",
                      "descriptor": "Planview RPA Initiative 002",
                      "startDate": "2024-07-01",
                      "endDate": "2025-07-01",
                      "owner": "106975",
                      "addProjects": [
                        {
                          "id": "Planview_RPA_001"
                        },
                        {
                          "id": "Planview_RPA_002"
                        }
                      ],
                      "deleteProjects": []
                    },
                    {
                      "action": "update",
                      "id": "Planview_RPA_Initiative_001",
                      "descriptor": "Planview RPA Initiative 001",
                      "startDate": "2024-07-01",
                      "endDate": "2025-07-01",
                      "owner": "106975",
                      "addProjects": [
                        {
                          "id": "Planview_RPA_004"
                        }
                      ],
                      "deleteProjects": [
                        {
                          "id": "Planview_RPA_003"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Initiatives successfully processed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiativeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": ["initiative:invoke"]
          }
        ]
      }
    },
    "/rpa/process-completion": {
      "post": {
        "summary": "Send RPA process completion response to Planview",
        "description": "Endpoint to send the response from RPA to Planview for process completion.",
        "requestBody": {
          "description": "JSON payload containing the RPA process completion details.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "initiativeId": {
                    "type": "string",
                    "description": "Unique identifier for the initiative."
                  },
                  "status": {
                    "type": "string",
                    "enum": ["success", "failure"],
                    "description": "Status of the RPA process completion."
                  },
                  "details": {
                    "type": "string",
                    "description": "Additional details about the RPA process completion."
                  }
                }
              },
              "example": {
                "initiativeId": "Planview_RPA_Initiative_002",
                "status": "success",
                "details": "The initiative was successfully processed in Workday."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "RPA process completion successfully recorded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "RPA process completion recorded successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input provided.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "An unexpected error occurred."
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": ["process:completion"]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "InitiativeRequest": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Initiative"
        }
      },
      "InitiativeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Initiatives processed successfully."
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "message": {
            "type": "string",
            "example": "Invalid input."
          }
        }
      },
      "Initiative": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["add", "update"],
            "description": "Action to be performed (add or update)."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the initiative."
          },
          "descriptor": {
            "type": "string",
            "description": "Description of the initiative."
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Start date of the initiative."
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "End date of the initiative."
          },
          "owner": {
            "type": "string",
            "description": "Owner of the initiative."
          },
          "addProjects": {
            "type": "array",
            "description": "List of projects to add to the initiative.",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "deleteProjects": {
            "type": "array",
            "description": "List of projects to remove from the initiative.",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the project."
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://login.microsoftonline.com/{tenant-id}/oauth2/v2.0/token",
            "scopes": {
              "initiative:invoke": "Invoke initiative action",
              "process:completion": "Record process completion"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "oauth2": ["initiative:invoke", "process:completion"]
    }
  ]
}
